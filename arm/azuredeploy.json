{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.22.6.54827",
      "templateHash": "3407193104882152390"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the the environment which is used to generate a short unique hash used in all resources."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "minLength": 1,
      "metadata": {
        "description": "Primary location for all resources"
      }
    },
    "openAiLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "minLength": 1,
      "metadata": {
        "description": "Location for OpenAI resource"
      }
    },
    "devBoxNetworkPrivateEndpointSubnetId": {
      "type": "string",
      "metadata": {
        "description": "Subnet the devbox can reach to expose the APIm private endpoint in"
      }
    },
    "appServicePrivateDnsZoneId": {
      "type": "string",
      "metadata": {
        "description": "Private DNS Zone to use for the APIm resource"
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "analysisServicesServers": "as",
      "apiManagementService": "apim-",
      "appConfigurationConfigurationStores": "appcs-",
      "appManagedEnvironments": "cae-",
      "appContainerApps": "ca-",
      "authorizationPolicyDefinitions": "policy-",
      "automationAutomationAccounts": "aa-",
      "blueprintBlueprints": "bp-",
      "blueprintBlueprintsArtifacts": "bpa-",
      "cacheRedis": "redis-",
      "cdnProfiles": "cdnp-",
      "cdnProfilesEndpoints": "cdne-",
      "cognitiveServicesAccounts": "cog-",
      "cognitiveServicesFormRecognizer": "cog-fr-",
      "cognitiveServicesTextAnalytics": "cog-ta-",
      "computeAvailabilitySets": "avail-",
      "computeCloudServices": "cld-",
      "computeDiskEncryptionSets": "des",
      "computeDisks": "disk",
      "computeDisksOs": "osdisk",
      "computeGalleries": "gal",
      "computeSnapshots": "snap-",
      "computeVirtualMachines": "vm",
      "computeVirtualMachineScaleSets": "vmss-",
      "containerInstanceContainerGroups": "ci",
      "containerRegistryRegistries": "cr",
      "containerServiceManagedClusters": "aks-",
      "databricksWorkspaces": "dbw-",
      "dataFactoryFactories": "adf-",
      "dataLakeAnalyticsAccounts": "dla",
      "dataLakeStoreAccounts": "dls",
      "dataMigrationServices": "dms-",
      "dBforMySQLServers": "mysql-",
      "dBforPostgreSQLServers": "psql-",
      "devicesIotHubs": "iot-",
      "devicesProvisioningServices": "provs-",
      "devicesProvisioningServicesCertificates": "pcert-",
      "documentDBDatabaseAccounts": "cosmos-",
      "eventGridDomains": "evgd-",
      "eventGridDomainsTopics": "evgt-",
      "eventGridEventSubscriptions": "evgs-",
      "eventHubNamespaces": "evhns-",
      "eventHubNamespacesEventHubs": "evh-",
      "hdInsightClustersHadoop": "hadoop-",
      "hdInsightClustersHbase": "hbase-",
      "hdInsightClustersKafka": "kafka-",
      "hdInsightClustersMl": "mls-",
      "hdInsightClustersSpark": "spark-",
      "hdInsightClustersStorm": "storm-",
      "hybridComputeMachines": "arcs-",
      "insightsActionGroups": "ag-",
      "insightsComponents": "appi-",
      "keyVaultVaults": "kv-",
      "kubernetesConnectedClusters": "arck",
      "kustoClusters": "dec",
      "kustoClustersDatabases": "dedb",
      "loadTesting": "lt-",
      "logicIntegrationAccounts": "ia-",
      "logicWorkflows": "logic-",
      "machineLearningServicesWorkspaces": "mlw-",
      "managedIdentityUserAssignedIdentities": "id-",
      "managementManagementGroups": "mg-",
      "migrateAssessmentProjects": "migr-",
      "networkApplicationGateways": "agw-",
      "networkApplicationSecurityGroups": "asg-",
      "networkAzureFirewalls": "afw-",
      "networkBastionHosts": "bas-",
      "networkConnections": "con-",
      "networkDnsZones": "dnsz-",
      "networkExpressRouteCircuits": "erc-",
      "networkFirewallPolicies": "afwp-",
      "networkFirewallPoliciesWebApplication": "waf",
      "networkFirewallPoliciesRuleGroups": "wafrg",
      "networkFrontDoors": "fd-",
      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
      "networkLoadBalancersExternal": "lbe-",
      "networkLoadBalancersInternal": "lbi-",
      "networkLoadBalancersInboundNatRules": "rule-",
      "networkLocalNetworkGateways": "lgw-",
      "networkNatGateways": "ng-",
      "networkNetworkInterfaces": "nic-",
      "networkNetworkSecurityGroups": "nsg-",
      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
      "networkNetworkWatchers": "nw-",
      "networkPrivateDnsZones": "pdnsz-",
      "networkPrivateLinkServices": "pl-",
      "networkPublicIPAddresses": "pip-",
      "networkPublicIPPrefixes": "ippre-",
      "networkRouteFilters": "rf-",
      "networkRouteTables": "rt-",
      "networkRouteTablesRoutes": "udr-",
      "networkTrafficManagerProfiles": "traf-",
      "networkVirtualNetworkGateways": "vgw-",
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
      "networkVirtualWans": "vwan-",
      "networkVpnGateways": "vpng-",
      "networkVpnGatewaysVpnConnections": "vcn-",
      "networkVpnGatewaysVpnSites": "vst-",
      "notificationHubsNamespaces": "ntfns-",
      "notificationHubsNamespacesNotificationHubs": "ntf-",
      "operationalInsightsWorkspaces": "log-",
      "portalDashboards": "dash-",
      "powerBIDedicatedCapacities": "pbi-",
      "purviewAccounts": "pview-",
      "recoveryServicesVaults": "rsv-",
      "resourcesResourceGroups": "rg-",
      "searchSearchServices": "srch-",
      "serviceBusNamespaces": "sb-",
      "serviceBusNamespacesQueues": "sbq-",
      "serviceBusNamespacesTopics": "sbt-",
      "serviceEndPointPolicies": "se-",
      "serviceFabricClusters": "sf-",
      "signalRServiceSignalR": "sigr",
      "sqlManagedInstances": "sqlmi-",
      "sqlServers": "sql-",
      "sqlServersDataWarehouse": "sqldw-",
      "sqlServersDatabases": "sqldb-",
      "sqlServersDatabasesStretch": "sqlstrdb-",
      "storageStorageAccounts": "st",
      "storageStorageAccountsVm": "stvm",
      "storSimpleManagers": "ssimp",
      "streamAnalyticsCluster": "asa-",
      "synapseWorkspaces": "syn",
      "synapseWorkspacesAnalyticsWorkspaces": "synw",
      "synapseWorkspacesSqlPoolsDedicated": "syndp",
      "synapseWorkspacesSqlPoolsSpark": "synsp",
      "timeSeriesInsightsEnvironments": "tsi-",
      "webServerFarms": "plan-",
      "webSitesAppService": "app-",
      "webSitesAppServiceEnvironment": "ase-",
      "webSitesFunctions": "func-",
      "webStaticSites": "stapp-"
    },
    "abbrs": "[variables('$fxv#0')]",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    },
    "resourceToken": "[toLower(uniqueString(resourceGroup().id, parameters('environmentName'), parameters('location')))]",
    "apiServiceName": "python-api",
    "vnetName": "[format('{0}{1}', variables('abbrs').networkVirtualNetworks, variables('resourceToken'))]",
    "openAiName": "[toLower(format('{0}{1}', variables('abbrs').cognitiveServicesAccounts, variables('resourceToken')))]",
    "aspName": "[format('{0}-{1}', variables('abbrs').webSitesAppService, variables('resourceToken'))]",
    "appName": "[format('openai-centralcommand-{0}', variables('resourceToken'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-vnet', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetCidr": {
            "value": "10.200.0.0/16"
          },
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "8514558400000082558"
            }
          },
          "parameters": {
            "vnetName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "vnetCidr": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', 'privatelink.openai.azure.com', 'privatelink.openai.azure.com-link')]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.openai.azure.com')]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}-apim-nsg', parameters('vnetName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "ClientCommsToApim",
                    "properties": {
                      "access": "Allow",
                      "direction": "Inbound",
                      "priority": 1000,
                      "protocol": "Tcp",
                      "description": "Let Client traffic in",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*"
                    }
                  },
                  {
                    "name": "MgmtEndpoint",
                    "properties": {
                      "access": "Allow",
                      "direction": "Inbound",
                      "priority": 999,
                      "protocol": "*",
                      "description": "Let Mgmt traffic in",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-11-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetCidr')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "AppServiceDelegated",
                    "properties": {
                      "addressPrefix": "[cidrSubnet(parameters('vnetCidr'), 24, 1)]",
                      "delegations": [
                        {
                          "name": "AppServiceDelegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverFarms"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "PrivateEndpoints",
                    "properties": {
                      "addressPrefix": "[cidrSubnet(parameters('vnetCidr'), 24, 2)]",
                      "privateEndpointNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "ApimSubnet",
                    "properties": {
                      "addressPrefix": "[cidrSubnet(parameters('vnetCidr'), 24, 3)]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-apim-nsg', parameters('vnetName')))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-apim-nsg', parameters('vnetName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "privatelink.openai.azure.com",
              "location": "global"
            }
          ],
          "outputs": {
            "privateEndpointSubnetId": {
              "type": "string",
              "value": "[filter(reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2022-11-01').subnets, lambda('subnet', equals(lambdaVariables('subnet').name, 'PrivateEndpoints')))[0].id]"
            },
            "vnetIntegrationSubnetId": {
              "type": "string",
              "value": "[filter(reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2022-11-01').subnets, lambda('subnet', equals(lambdaVariables('subnet').name, 'AppServiceDelegated')))[0].id]"
            },
            "apimSubnetId": {
              "type": "string",
              "value": "[filter(reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2022-11-01').subnets, lambda('subnet', equals(lambdaVariables('subnet').name, 'ApimSubnet')))[0].id]"
            },
            "openAiPrivateDnsZoneId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.openai.azure.com')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-core', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsName": {
            "value": "[format('{0}-{1}-logs', variables('abbrs').operationalInsightsWorkspaces, parameters('environmentName'))]"
          },
          "appinsightsName": {
            "value": "[format('{0}-{1}', variables('abbrs').insightsComponents, parameters('environmentName'))]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "6365641387836353795"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "logAnalyticsName": {
              "type": "string"
            },
            "appinsightsName": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('logAnalyticsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('appinsightsName')]",
              "location": "[parameters('location')]",
              "kind": "web",
              "tags": "[parameters('tags')]",
              "properties": {
                "Application_Type": "web",
                "Flow_Type": "Bluefield",
                "RetentionInDays": 30,
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
              ]
            }
          ],
          "outputs": {
            "logAnalyticsId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
            },
            "logAnalyticsCustomerId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName')), '2022-10-01').customerId]"
            },
            "logAnalyticsName": {
              "type": "string",
              "value": "[parameters('logAnalyticsName')]"
            },
            "appInsightsName": {
              "type": "string",
              "value": "[parameters('appinsightsName')]"
            },
            "appInsightsResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/components', parameters('appinsightsName'))]"
            },
            "appInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsightsName')), '2020-02-02').InstrumentationKey]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-apim', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "aspName": {
            "value": "[variables('aspName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "12011806255707977710"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "aspName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-09-01",
              "name": "[parameters('aspName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "B1",
                "capacity": 1
              },
              "kind": "linux",
              "properties": {
                "zoneRedundant": false,
                "reserved": true
              }
            }
          ],
          "outputs": {
            "aspId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', parameters('aspName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-openai', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "openAiEmbeddingModelName": {
            "value": "Ada002Embedding"
          },
          "openAiModelName": {
            "value": "Gpt35Turbo0613"
          },
          "openAiModelGpt4Name": {
            "value": ""
          },
          "openAiLocation": {
            "value": "[parameters('openAiLocation')]"
          },
          "openAiResourceName": {
            "value": "[variables('openAiName')]"
          },
          "privateDnsZoneId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name)), '2022-09-01').outputs.openAiPrivateDnsZoneId.value]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name)), '2022-09-01').outputs.privateEndpointSubnetId.value]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "2562521473685463977"
            }
          },
          "parameters": {
            "openAiResourceName": {
              "type": "string"
            },
            "openAiModelName": {
              "type": "string"
            },
            "openAiModelGpt4Name": {
              "type": "string"
            },
            "openAiEmbeddingModelName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "openAiLocation": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "privateDnsZoneId": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', format('{0}-private-endpoint', parameters('openAiResourceName')), format('{0}-private-endpoint-dns', parameters('openAiResourceName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[format('{0}-private-endpoint-cfg', parameters('openAiResourceName'))]",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-private-endpoint', parameters('openAiResourceName')))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('openAiResourceName')]",
              "location": "[parameters('openAiLocation')]",
              "kind": "OpenAI",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "sku": {
                "name": "S0"
              },
              "properties": {
                "publicNetworkAccess": "Disabled",
                "networkAcls": {
                  "defaultAction": "Deny",
                  "ipRules": [],
                  "virtualNetworkRules": []
                },
                "customSubDomainName": "[parameters('openAiResourceName')]"
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}-private-endpoint', parameters('openAiResourceName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-private-link-service-connection', parameters('openAiResourceName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))]",
                      "groupIds": [
                        "account"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('openAiResourceName'), parameters('openAiModelName'))]",
              "sku": {
                "name": "Standard",
                "capacity": 20
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "gpt-35-turbo",
                  "version": "0613"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('openAiModelGpt4Name')))]",
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('openAiResourceName'), if(empty(parameters('openAiModelGpt4Name')), 'IGNORE', parameters('openAiModelGpt4Name')))]",
              "sku": {
                "name": "Standard",
                "capacity": 20
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "gpt-4",
                  "version": "0613"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('openAiResourceName'), parameters('openAiModelName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('openAiResourceName'), parameters('openAiEmbeddingModelName'))]",
              "sku": {
                "name": "Standard",
                "capacity": 20
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "text-embedding-ada-002",
                  "version": "2"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('openAiResourceName'), parameters('openAiModelName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('openAiResourceName'), if(empty(parameters('openAiModelGpt4Name')), 'IGNORE', parameters('openAiModelGpt4Name')))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))]"
            },
            "openAiName": {
              "type": "string",
              "value": "[parameters('openAiResourceName')]"
            },
            "openAiEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName')), '2023-05-01').endpoint]"
            },
            "modelName": {
              "type": "string",
              "value": "[parameters('openAiModelName')]"
            },
            "embeddingModelName": {
              "type": "string",
              "value": "[parameters('openAiEmbeddingModelName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-cc', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "aspId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-apim', deployment().name)), '2022-09-01').outputs.aspId.value]"
          },
          "azureMonitorWorkspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-core', deployment().name)), '2022-09-01').outputs.logAnalyticsCustomerId.value]"
          },
          "azureMonitorWorkspaceName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-core', deployment().name)), '2022-09-01').outputs.logAnalyticsName.value]"
          },
          "openAiModelName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-openai', deployment().name)), '2022-09-01').outputs.modelName.value]"
          },
          "openAiUrl": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-openai', deployment().name)), '2022-09-01').outputs.openAiEndpoint.value]"
          },
          "privateDnsZoneId": {
            "value": "[parameters('appServicePrivateDnsZoneId')]"
          },
          "privateEndpointSubnetId": {
            "value": "[parameters('devBoxNetworkPrivateEndpointSubnetId')]"
          },
          "sampleAppName": {
            "value": "[variables('appName')]"
          },
          "vnetIntegrationSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name)), '2022-09-01').outputs.vnetIntegrationSubnetId.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "17124270794102372800"
            }
          },
          "parameters": {
            "aspId": {
              "type": "string"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "vnetIntegrationSubnetId": {
              "type": "string"
            },
            "privateDnsZoneId": {
              "type": "string"
            },
            "sampleAppName": {
              "type": "string"
            },
            "azureMonitorWorkspaceId": {
              "type": "string"
            },
            "azureMonitorWorkspaceName": {
              "type": "string"
            },
            "openAiUrl": {
              "type": "string"
            },
            "openAiModelName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', format('{0}-private-endpoint', parameters('sampleAppName')), format('{0}-private-endpoint-dns', parameters('sampleAppName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[format('{0}-private-endpoint-cfg', parameters('sampleAppName'))]",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-private-endpoint', parameters('sampleAppName')))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-09-01",
              "name": "[parameters('sampleAppName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "httpsOnly": true,
                "serverFarmId": "[parameters('aspId')]",
                "vnetRouteAllEnabled": true,
                "virtualNetworkSubnetId": "[parameters('vnetIntegrationSubnetId')]",
                "clientAffinityEnabled": false,
                "siteConfig": {
                  "minTlsVersion": "1.2",
                  "alwaysOn": true,
                  "vnetRouteAllEnabled": true,
                  "ipSecurityRestrictions": [],
                  "scmIpSecurityRestrictions": [],
                  "linuxFxVersion": "DOCKER|graemefoster/aicentralcommand:0.4",
                  "appSettings": [
                    {
                      "name": "AICentralCommand__AuthProviders__0__Type",
                      "value": "NoAuth"
                    },
                    {
                      "name": "AICentralCommand__AuthProviders__0__Name",
                      "value": "no-auth"
                    },
                    {
                      "name": "AICentralCommand__Endpoints__0__Type",
                      "value": "AzureOpenAIEndpoint"
                    },
                    {
                      "name": "AICentralCommand__Endpoints__0__Name",
                      "value": "openai-1"
                    },
                    {
                      "name": "AICentralCommand__Endpoints__0__Properties__LanguageEndpoint",
                      "value": "[parameters('openAiUrl')]"
                    },
                    {
                      "name": "AICentralCommand__Endpoints__0__Properties__ModelName",
                      "value": "[parameters('openAiModelName')]"
                    },
                    {
                      "name": "AICentralCommand__Endpoints__0__Properties__AuthenticationType",
                      "value": "EntraPassThrough"
                    },
                    {
                      "name": "AICentralCommand__EndpointSelectors__0__Type",
                      "value": "SingleEndpoint"
                    },
                    {
                      "name": "AICentralCommand__EndpointSelectors__0__Name",
                      "value": "default"
                    },
                    {
                      "name": "AICentralCommand__EndpointSelectors__0__Properties__Endpoint",
                      "value": "openai-1"
                    },
                    {
                      "name": "AICentralCommand__Pipelines__0__Name",
                      "value": "SynchronousPipeline"
                    },
                    {
                      "name": "AICentralCommand__Pipelines__0__Name",
                      "value": "SynchronousPipeline"
                    },
                    {
                      "name": "AICentralCommand__Pipelines__0__Path",
                      "value": "/openai/deployments/Gpt35Turbo0613/chat/completions"
                    },
                    {
                      "name": "AICentralCommand__Pipelines__0__EndpointChooser",
                      "value": "default"
                    },
                    {
                      "name": "AICentralCommand__Pipelines__0__AuthProvider",
                      "value": "no-auth"
                    },
                    {
                      "name": "AICentralCommand__Pipelines__0__Steps__0__StepType",
                      "value": "AzureMonitorLogger"
                    },
                    {
                      "name": "AICentralCommand__Pipelines__0__Steps__0__Properties__WorkspaceId",
                      "value": "[parameters('azureMonitorWorkspaceId')]"
                    },
                    {
                      "name": "AICentralCommand__Pipelines__0__Steps__0__Properties__Key",
                      "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('azureMonitorWorkspaceName')), '2020-08-01').primarySharedKey]"
                    },
                    {
                      "name": "AICentralCommand__Pipelines__0__Steps__0__Properties__LogPrompt",
                      "value": "true"
                    },
                    {
                      "name": "DOCKER_REGISTRY_SERVER_URL",
                      "value": "https://index.docker.io/v1"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}-private-endpoint', parameters('sampleAppName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-private-link-service-connection', parameters('sampleAppName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', parameters('sampleAppName'))]",
                      "groupIds": [
                        "sites"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sampleAppName'))]"
              ]
            }
          ],
          "outputs": {
            "appUrl": {
              "type": "string",
              "value": "[format('https://{0}/', reference(resourceId('Microsoft.Web/sites', parameters('sampleAppName')), '2022-09-01').defaultHostName)]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-apim', deployment().name))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-core', deployment().name))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-openai', deployment().name))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name))]"
      ]
    }
  ],
  "outputs": {
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    }
  }
}