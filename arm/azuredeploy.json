{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.22.6.54827",
      "templateHash": "13272337238971382234"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the the environment which is used to generate a short unique hash used in all resources."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "minLength": 1,
      "metadata": {
        "description": "Primary location for all resources"
      }
    },
    "openAiLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "minLength": 1,
      "metadata": {
        "description": "Location for OpenAI resource"
      }
    },
    "devBoxUsersAadGroupId": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "USer Group Id for Dev Box users. Pass 'azd' if you are running this template using azd."
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "analysisServicesServers": "as",
      "apiManagementService": "apim-",
      "appConfigurationConfigurationStores": "appcs-",
      "appManagedEnvironments": "cae-",
      "appContainerApps": "ca-",
      "authorizationPolicyDefinitions": "policy-",
      "automationAutomationAccounts": "aa-",
      "blueprintBlueprints": "bp-",
      "blueprintBlueprintsArtifacts": "bpa-",
      "cacheRedis": "redis-",
      "cdnProfiles": "cdnp-",
      "cdnProfilesEndpoints": "cdne-",
      "cognitiveServicesAccounts": "cog-",
      "cognitiveServicesFormRecognizer": "cog-fr-",
      "cognitiveServicesTextAnalytics": "cog-ta-",
      "computeAvailabilitySets": "avail-",
      "computeCloudServices": "cld-",
      "computeDiskEncryptionSets": "des",
      "computeDisks": "disk",
      "computeDisksOs": "osdisk",
      "computeGalleries": "gal",
      "computeSnapshots": "snap-",
      "computeVirtualMachines": "vm",
      "computeVirtualMachineScaleSets": "vmss-",
      "containerInstanceContainerGroups": "ci",
      "containerRegistryRegistries": "cr",
      "containerServiceManagedClusters": "aks-",
      "databricksWorkspaces": "dbw-",
      "dataFactoryFactories": "adf-",
      "dataLakeAnalyticsAccounts": "dla",
      "dataLakeStoreAccounts": "dls",
      "dataMigrationServices": "dms-",
      "dBforMySQLServers": "mysql-",
      "dBforPostgreSQLServers": "psql-",
      "devicesIotHubs": "iot-",
      "devicesProvisioningServices": "provs-",
      "devicesProvisioningServicesCertificates": "pcert-",
      "documentDBDatabaseAccounts": "cosmos-",
      "eventGridDomains": "evgd-",
      "eventGridDomainsTopics": "evgt-",
      "eventGridEventSubscriptions": "evgs-",
      "eventHubNamespaces": "evhns-",
      "eventHubNamespacesEventHubs": "evh-",
      "hdInsightClustersHadoop": "hadoop-",
      "hdInsightClustersHbase": "hbase-",
      "hdInsightClustersKafka": "kafka-",
      "hdInsightClustersMl": "mls-",
      "hdInsightClustersSpark": "spark-",
      "hdInsightClustersStorm": "storm-",
      "hybridComputeMachines": "arcs-",
      "insightsActionGroups": "ag-",
      "insightsComponents": "appi-",
      "keyVaultVaults": "kv-",
      "kubernetesConnectedClusters": "arck",
      "kustoClusters": "dec",
      "kustoClustersDatabases": "dedb",
      "loadTesting": "lt-",
      "logicIntegrationAccounts": "ia-",
      "logicWorkflows": "logic-",
      "machineLearningServicesWorkspaces": "mlw-",
      "managedIdentityUserAssignedIdentities": "id-",
      "managementManagementGroups": "mg-",
      "migrateAssessmentProjects": "migr-",
      "networkApplicationGateways": "agw-",
      "networkApplicationSecurityGroups": "asg-",
      "networkAzureFirewalls": "afw-",
      "networkBastionHosts": "bas-",
      "networkConnections": "con-",
      "networkDnsZones": "dnsz-",
      "networkExpressRouteCircuits": "erc-",
      "networkFirewallPolicies": "afwp-",
      "networkFirewallPoliciesWebApplication": "waf",
      "networkFirewallPoliciesRuleGroups": "wafrg",
      "networkFrontDoors": "fd-",
      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
      "networkLoadBalancersExternal": "lbe-",
      "networkLoadBalancersInternal": "lbi-",
      "networkLoadBalancersInboundNatRules": "rule-",
      "networkLocalNetworkGateways": "lgw-",
      "networkNatGateways": "ng-",
      "networkNetworkInterfaces": "nic-",
      "networkNetworkSecurityGroups": "nsg-",
      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
      "networkNetworkWatchers": "nw-",
      "networkPrivateDnsZones": "pdnsz-",
      "networkPrivateLinkServices": "pl-",
      "networkPublicIPAddresses": "pip-",
      "networkPublicIPPrefixes": "ippre-",
      "networkRouteFilters": "rf-",
      "networkRouteTables": "rt-",
      "networkRouteTablesRoutes": "udr-",
      "networkTrafficManagerProfiles": "traf-",
      "networkVirtualNetworkGateways": "vgw-",
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
      "networkVirtualWans": "vwan-",
      "networkVpnGateways": "vpng-",
      "networkVpnGatewaysVpnConnections": "vcn-",
      "networkVpnGatewaysVpnSites": "vst-",
      "notificationHubsNamespaces": "ntfns-",
      "notificationHubsNamespacesNotificationHubs": "ntf-",
      "operationalInsightsWorkspaces": "log-",
      "portalDashboards": "dash-",
      "powerBIDedicatedCapacities": "pbi-",
      "purviewAccounts": "pview-",
      "recoveryServicesVaults": "rsv-",
      "resourcesResourceGroups": "rg-",
      "searchSearchServices": "srch-",
      "serviceBusNamespaces": "sb-",
      "serviceBusNamespacesQueues": "sbq-",
      "serviceBusNamespacesTopics": "sbt-",
      "serviceEndPointPolicies": "se-",
      "serviceFabricClusters": "sf-",
      "signalRServiceSignalR": "sigr",
      "sqlManagedInstances": "sqlmi-",
      "sqlServers": "sql-",
      "sqlServersDataWarehouse": "sqldw-",
      "sqlServersDatabases": "sqldb-",
      "sqlServersDatabasesStretch": "sqlstrdb-",
      "storageStorageAccounts": "st",
      "storageStorageAccountsVm": "stvm",
      "storSimpleManagers": "ssimp",
      "streamAnalyticsCluster": "asa-",
      "synapseWorkspaces": "syn",
      "synapseWorkspacesAnalyticsWorkspaces": "synw",
      "synapseWorkspacesSqlPoolsDedicated": "syndp",
      "synapseWorkspacesSqlPoolsSpark": "synsp",
      "timeSeriesInsightsEnvironments": "tsi-",
      "webServerFarms": "plan-",
      "webSitesAppService": "app-",
      "webSitesAppServiceEnvironment": "ase-",
      "webSitesFunctions": "func-",
      "webStaticSites": "stapp-"
    },
    "$fxv#1": {
      "AadDevBoxTeamLeadsGroupId": "c67ef1b6-b88b-4105-8d8f-1ba5e5464628",
      "AadOpsUserGroupId": "d1466133-37f9-4212-acfc-89d97b69c1d5",
      "AadDevBoxUsersGroupId": "3e86a134-9749-4be2-963b-4f90350d98ef"
    },
    "abbrs": "[variables('$fxv#0')]",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    },
    "resourceToken": "[toLower(uniqueString(resourceGroup().id, parameters('environmentName'), parameters('location')))]",
    "apiServiceName": "python-api",
    "aadGroupIds": "[variables('$fxv#1')]",
    "devBoxUserGroup": "[if(equals(parameters('devBoxUsersAadGroupId'), 'azd'), variables('aadGroupIds').AadDevBoxUsersGroupId, parameters('devBoxUsersAadGroupId'))]",
    "vnetName": "[format('{0}{1}', variables('abbrs').networkVirtualNetworks, parameters('environmentName'))]",
    "kvName": "[format('{0}{1}', variables('abbrs').keyVaultVaults, parameters('environmentName'))]",
    "apimName": "[format('{0}{1}', variables('abbrs').apiManagementService, parameters('environmentName'))]",
    "openAiName": "[toLower(format('{0}{1}', variables('abbrs').cognitiveServicesAccounts, parameters('environmentName')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-vnet', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vnetCidr": {
            "value": "10.0.0.0/12"
          },
          "vnetName": {
            "value": "[variables('vnetName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "11913669205616799738"
            }
          },
          "parameters": {
            "vnetName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "vnetCidr": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', 'privatelink.openai.azure.com', 'privatelink.openai.azure.com-link')]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.openai.azure.com')]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', 'privatelink.azurewebsites.net', 'privatelink.azurewebsites.net-link')]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azurewebsites.net')]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}-apim-nsg', parameters('vnetName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "ClientCommsToApim",
                    "properties": {
                      "access": "Allow",
                      "direction": "Inbound",
                      "priority": 1000,
                      "protocol": "Tcp",
                      "description": "Let Client traffic in",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*"
                    }
                  },
                  {
                    "name": "MgmtEndpoint",
                    "properties": {
                      "access": "Allow",
                      "direction": "Inbound",
                      "priority": 999,
                      "protocol": "*",
                      "description": "Let Mgmt traffic in",
                      "sourcePortRange": "*",
                      "destinationPortRange": "3443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-11-01",
              "name": "[parameters('vnetName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetCidr')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "AppServiceDelegated",
                    "properties": {
                      "addressPrefix": "[cidrSubnet(parameters('vnetCidr'), 24, 1)]",
                      "delegations": [
                        {
                          "name": "AppServiceDelegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverFarms"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "PrivateEndpoints",
                    "properties": {
                      "addressPrefix": "[cidrSubnet(parameters('vnetCidr'), 24, 2)]",
                      "privateEndpointNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "ApimSubnet",
                    "properties": {
                      "addressPrefix": "[cidrSubnet(parameters('vnetCidr'), 24, 3)]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-apim-nsg', parameters('vnetName')))]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-apim-nsg', parameters('vnetName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "privatelink.openai.azure.com",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "privatelink.azurewebsites.net",
              "location": "global"
            }
          ],
          "outputs": {
            "privateEndpointSubnetId": {
              "type": "string",
              "value": "[filter(reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2022-11-01').subnets, lambda('subnet', equals(lambdaVariables('subnet').name, 'PrivateEndpoints')))[0].id]"
            },
            "vnetIntegrationSubnetId": {
              "type": "string",
              "value": "[filter(reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2022-11-01').subnets, lambda('subnet', equals(lambdaVariables('subnet').name, 'AppServiceDelegated')))[0].id]"
            },
            "apimSubnetId": {
              "type": "string",
              "value": "[filter(reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '2022-11-01').subnets, lambda('subnet', equals(lambdaVariables('subnet').name, 'ApimSubnet')))[0].id]"
            },
            "appServicePrivateDnsZoneId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azurewebsites.net')]"
            },
            "openAiPrivateDnsZoneId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.openai.azure.com')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-core', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "kvName": {
            "value": "[variables('kvName')]"
          },
          "logAnalyticsName": {
            "value": "[format('{0}-{1}-logs', variables('abbrs').operationalInsightsWorkspaces, parameters('environmentName'))]"
          },
          "appinsightsName": {
            "value": "[format('{0}-{1}', variables('abbrs').insightsComponents, parameters('environmentName'))]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "3575467312391435956"
            }
          },
          "parameters": {
            "kvName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "logAnalyticsName": {
              "type": "string"
            },
            "appinsightsName": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('logAnalyticsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-02-01",
              "name": "[parameters('kvName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enableRbacAuthorization": true
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('kvName'))]",
              "name": "diagnostics",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
                "logs": [
                  {
                    "category": "AuditEvent",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('appinsightsName')]",
              "location": "[parameters('location')]",
              "kind": "web",
              "tags": "[parameters('tags')]",
              "properties": {
                "Application_Type": "web",
                "Flow_Type": "Bluefield",
                "RetentionInDays": 30,
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
              ]
            }
          ],
          "outputs": {
            "kvName": {
              "type": "string",
              "value": "[parameters('kvName')]"
            },
            "kvId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('kvName'))]"
            },
            "kvUri": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('kvName')), '2023-02-01').vaultUri]"
            },
            "logAnalyticsId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]"
            },
            "logAnalyticsName": {
              "type": "string",
              "value": "[parameters('logAnalyticsName')]"
            },
            "appInsightsName": {
              "type": "string",
              "value": "[parameters('appinsightsName')]"
            },
            "appInsightsResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/components', parameters('appinsightsName'))]"
            },
            "appInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appinsightsName')), '2020-02-02').InstrumentationKey]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-identities', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "502316018387923298"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "openai-access-identity",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "identityId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'openai-access-identity')]"
            },
            "identityName": {
              "type": "string",
              "value": "openai-access-identity"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'openai-access-identity'), '2023-01-31').principalId]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-apim', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "apiName": {
            "value": "[variables('apimName')]"
          },
          "applicationInsightsName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-core', deployment().name)), '2022-09-01').outputs.appInsightsName.value]"
          },
          "publisherEmail": {
            "value": "graemefoster@microsoft.com"
          },
          "publisherName": {
            "value": "Graeme Foster"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name)), '2022-09-01').outputs.apimSubnetId.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "openAiBaseUrl": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-openai', deployment().name)), '2022-09-01').outputs.openAiEndpoint.value]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "accountsApiBaseUrl": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-accountsapi', deployment().name)), '2022-09-01').outputs.appUrl.value]"
          },
          "customerApiBaseUrl": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-cxapi', deployment().name)), '2022-09-01').outputs.appUrl.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "3712541195587812719"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "publisherEmail": {
              "type": "string"
            },
            "publisherName": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "apiName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "openAiBaseUrl": {
              "type": "string"
            },
            "customerApiBaseUrl": {
              "type": "string"
            },
            "accountsApiBaseUrl": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-apim', deployment().name)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "name": {
                    "value": "[parameters('apiName')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "publisherEmail": {
                    "value": "[parameters('publisherEmail')]"
                  },
                  "publisherName": {
                    "value": "[parameters('publisherName')]"
                  },
                  "sku": {
                    "value": "Developer"
                  },
                  "skuCount": {
                    "value": 1
                  },
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.22.6.54827",
                      "templateHash": "5194701495227430880"
                    },
                    "description": "Creates an Azure API Management instance."
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "publisherEmail": {
                      "type": "string",
                      "defaultValue": "noreply@microsoft.com",
                      "minLength": 1,
                      "metadata": {
                        "description": "The email address of the owner of the service"
                      }
                    },
                    "publisherName": {
                      "type": "string",
                      "defaultValue": "n/a",
                      "minLength": 1,
                      "metadata": {
                        "description": "The name of the owner of the service"
                      }
                    },
                    "sku": {
                      "type": "string",
                      "defaultValue": "Consumption",
                      "allowedValues": [
                        "Consumption",
                        "Developer",
                        "Standard",
                        "Premium"
                      ],
                      "metadata": {
                        "description": "The pricing tier of this API Management service"
                      }
                    },
                    "skuCount": {
                      "type": "int",
                      "defaultValue": 0,
                      "allowedValues": [
                        0,
                        1,
                        2
                      ],
                      "metadata": {
                        "description": "The instance size of this API Management service."
                      }
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Application Insights Name"
                      }
                    },
                    "subnetId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "virtualNetworkConfiguration": "[if(empty(parameters('subnetId')), null(), createObject('subnetResourceId', parameters('subnetId')))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ApiManagement/service",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[union(parameters('tags'), createObject('azd-service-name', parameters('name')))]",
                      "sku": {
                        "name": "[parameters('sku')]",
                        "capacity": "[if(equals(parameters('sku'), 'Consumption'), 0, if(equals(parameters('sku'), 'Developer'), 1, parameters('skuCount')))]"
                      },
                      "identity": {
                        "type": "SystemAssigned"
                      },
                      "properties": {
                        "publisherEmail": "[parameters('publisherEmail')]",
                        "publisherName": "[parameters('publisherName')]",
                        "customProperties": "[if(equals(parameters('sku'), 'Consumption'), createObject(), createObject('Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_GCM_SHA256', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA256', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30', 'false'))]",
                        "virtualNetworkConfiguration": "[variables('virtualNetworkConfiguration')]",
                        "apiVersionConstraint": {
                          "minApiVersion": "2019-12-01"
                        },
                        "virtualNetworkType": "External"
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('applicationInsightsName')))]",
                      "type": "Microsoft.ApiManagement/service/loggers",
                      "apiVersion": "2021-12-01-preview",
                      "name": "[format('{0}/{1}', parameters('name'), 'app-insights-logger')]",
                      "properties": {
                        "credentials": {
                          "instrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
                        },
                        "description": "Logger to Azure Application Insights",
                        "isBuffered": false,
                        "loggerType": "applicationInsights",
                        "resourceId": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "apimServiceName": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "apiPrincipalId": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('name')), '2023-03-01-preview', 'full').identity.principalId]"
                    },
                    "loggerId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.ApiManagement/service/loggers', parameters('name'), 'app-insights-logger')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}-apis', deployment().name)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "apimName": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-apim', deployment().name)), '2022-09-01').outputs.apimServiceName.value]"
                  },
                  "openAiBaseUrl": {
                    "value": "[parameters('openAiBaseUrl')]"
                  },
                  "customerApiBaseUrl": {
                    "value": "[parameters('customerApiBaseUrl')]"
                  },
                  "accountsApiBaseUrl": {
                    "value": "[parameters('accountsApiBaseUrl')]"
                  },
                  "loggerId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-apim', deployment().name)), '2022-09-01').outputs.loggerId.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.22.6.54827",
                      "templateHash": "14183624859679745683"
                    }
                  },
                  "parameters": {
                    "apimName": {
                      "type": "string"
                    },
                    "openAiBaseUrl": {
                      "type": "string"
                    },
                    "loggerId": {
                      "type": "string"
                    },
                    "customerApiBaseUrl": {
                      "type": "string"
                    },
                    "accountsApiBaseUrl": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "$fxv#0": "schema {\r\n    query: Query\r\n}\r\n\r\ntype Query {\r\n    customer(customerNumber: String!): Customer\r\n}\r\n\r\ntype Customer { \r\n    customerNumber: String!\r\n    name: String!\r\n    account: [Account]\r\n}\r\n\r\ntype Account {\r\n    accountNumber: String!\r\n    balance: Int!\r\n    name: String!\r\n}\r\n"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ApiManagement/service/apis/resolvers/policies",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[format('{0}/{1}/{2}/{3}', parameters('apimName'), 'gql', 'Query-customer', 'policy')]",
                      "properties": {
                        "format": "rawxml",
                        "value": "[replace('    <http-data-source>\r\n      <http-request>\r\n        <set-method>GET</set-method>\r\n        <set-url>@($\"|apiBaseUrl|/customer/{(string)context.GraphQL.Arguments[\"customerNumber\"]}\")</set-url>\r\n      </http-request>\r\n    </http-data-source>\r\n        ', '|apiBaseUrl|', parameters('customerApiBaseUrl'))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/apis/resolvers', parameters('apimName'), 'gql', 'Query-customer')]"
                      ]
                    },
                    {
                      "type": "Microsoft.ApiManagement/service/apis/resolvers/policies",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[format('{0}/{1}/{2}/{3}', parameters('apimName'), 'gql', 'customerResolver', 'policy')]",
                      "properties": {
                        "format": "rawxml",
                        "value": "[replace('    <http-data-source>\r\n      <http-request>\r\n        <set-method>GET</set-method>\r\n        <set-url>@($\"|apiBaseUrl|/customer/{(string)context.GraphQL.Parent[\"customerNumber\"]}\")</set-url>\r\n      </http-request>\r\n    </http-data-source>\r\n        ', '|apiBaseUrl|', parameters('customerApiBaseUrl'))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/apis/resolvers', parameters('apimName'), 'gql', 'customerResolver')]"
                      ]
                    },
                    {
                      "type": "Microsoft.ApiManagement/service/apis/resolvers/policies",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[format('{0}/{1}/{2}/{3}', parameters('apimName'), 'gql', 'customerAccountsResolver', 'policy')]",
                      "properties": {
                        "format": "rawxml",
                        "value": "[replace('    <http-data-source>\r\n      <http-request>\r\n        <set-method>GET</set-method>\r\n        <set-url>@($\"|apiBaseUrl|/customer/{(string)context.GraphQL.Parent[\"customerNumber\"]}/accounts\")</set-url>\r\n      </http-request>\r\n    </http-data-source>\r\n        ', '|apiBaseUrl|', parameters('accountsApiBaseUrl'))]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/apis/resolvers', parameters('apimName'), 'gql', 'customerAccountsResolver')]"
                      ]
                    },
                    {
                      "type": "Microsoft.ApiManagement/service/apis/policies",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[format('{0}/{1}/{2}', parameters('apimName'), 'gql', 'policy')]",
                      "properties": {
                        "format": "rawxml",
                        "value": "      <policies>\r\n        <inbound>\r\n            <base/>\r\n        </inbound>\r\n        <backend>\r\n            <base/>\r\n        </backend>\r\n        <outbound>\r\n            <base/>\r\n        </outbound>\r\n    </policies>\r\n      "
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'gql')]"
                      ]
                    },
                    {
                      "type": "Microsoft.ApiManagement/service/apis/schemas",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[format('{0}/{1}/{2}', parameters('apimName'), 'gql', 'graphql')]",
                      "properties": {
                        "contentType": "application/vnd.ms-azure-apim.graphql.schema",
                        "document": {
                          "value": "[variables('$fxv#0')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'gql')]"
                      ]
                    },
                    {
                      "type": "Microsoft.ApiManagement/service/apis/resolvers",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[format('{0}/{1}/{2}', parameters('apimName'), 'gql', 'Query-customer')]",
                      "properties": {
                        "displayName": "Query-customer Resolver",
                        "path": "Query/Customer",
                        "description": "Links the Customer type in the schema with a backend customer api"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'gql')]"
                      ]
                    },
                    {
                      "type": "Microsoft.ApiManagement/service/apis/resolvers",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[format('{0}/{1}/{2}', parameters('apimName'), 'gql', 'customerResolver')]",
                      "properties": {
                        "displayName": "Customer Resolver",
                        "path": "Customer",
                        "description": "Links the Customer type in the schema with a backend customer api"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'gql')]"
                      ]
                    },
                    {
                      "type": "Microsoft.ApiManagement/service/apis/resolvers",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[format('{0}/{1}/{2}', parameters('apimName'), 'gql', 'customerAccountsResolver')]",
                      "properties": {
                        "displayName": "Customer Accounts Resolver",
                        "path": "Customer/account",
                        "description": "Links the Customer/accounts field in the schema with a backend accounts api"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'gql')]"
                      ]
                    },
                    {
                      "type": "Microsoft.ApiManagement/service/apis/diagnostics",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[format('{0}/{1}/{2}', parameters('apimName'), 'gql', 'applicationinsights')]",
                      "properties": {
                        "loggerId": "[parameters('loggerId')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'gql')]"
                      ]
                    },
                    {
                      "type": "Microsoft.ApiManagement/service/apis/diagnostics",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[format('{0}/{1}/{2}', parameters('apimName'), 'cx', 'applicationinsights')]",
                      "properties": {
                        "loggerId": "[parameters('loggerId')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'cx')]"
                      ]
                    },
                    {
                      "type": "Microsoft.ApiManagement/service/apis/operations",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[format('{0}/{1}/{2}', parameters('apimName'), 'cx', 'open-ai-embeddings')]",
                      "properties": {
                        "displayName": "Embeddings",
                        "method": "POST",
                        "urlTemplate": "/openai/deployments/{deploymentName}/embeddings",
                        "templateParameters": [
                          {
                            "name": "deploymentName",
                            "type": "string",
                            "required": true
                          }
                        ],
                        "request": {
                          "queryParameters": [
                            {
                              "name": "api-version",
                              "type": "string",
                              "required": true
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'cx')]"
                      ]
                    },
                    {
                      "type": "Microsoft.ApiManagement/service/apis/operations",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[format('{0}/{1}/{2}', parameters('apimName'), 'cx', 'open-ai-chat-completions')]",
                      "properties": {
                        "displayName": "Chat Completions",
                        "method": "POST",
                        "urlTemplate": "/openai/deployments/{deploymentName}/chat/completions",
                        "templateParameters": [
                          {
                            "name": "deploymentName",
                            "type": "string",
                            "required": true
                          }
                        ],
                        "request": {
                          "queryParameters": [
                            {
                              "name": "api-version",
                              "type": "string",
                              "required": true
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), 'cx')]"
                      ]
                    },
                    {
                      "type": "Microsoft.ApiManagement/service/apis",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[format('{0}/{1}', parameters('apimName'), 'gql')]",
                      "properties": {
                        "path": "gql",
                        "type": "graphql",
                        "apiType": "graphql",
                        "displayName": "CX GQL Api",
                        "protocols": [
                          "https",
                          "wss"
                        ],
                        "isCurrent": true,
                        "subscriptionRequired": false
                      }
                    },
                    {
                      "type": "Microsoft.ApiManagement/service/apis",
                      "apiVersion": "2023-03-01-preview",
                      "name": "[format('{0}/{1}', parameters('apimName'), 'cx')]",
                      "properties": {
                        "path": "/",
                        "type": "http",
                        "displayName": "Azure Open AI proxy",
                        "protocols": [
                          "https"
                        ],
                        "isCurrent": true,
                        "subscriptionRequired": false,
                        "serviceUrl": "[parameters('openAiBaseUrl')]"
                      }
                    }
                  ],
                  "outputs": {
                    "a": {
                      "type": "string",
                      "value": "[parameters('customerApiBaseUrl')]"
                    },
                    "b": {
                      "type": "string",
                      "value": "[parameters('accountsApiBaseUrl')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('{0}-apim', deployment().name))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-accountsapi', deployment().name))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-core', deployment().name))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-cxapi', deployment().name))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-openai', deployment().name))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-openai', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "openAiEmbeddingModelName": {
            "value": "Ada002Embedding"
          },
          "openAiModelName": {
            "value": "Gpt35Turbo0613"
          },
          "openAiModelGpt4Name": {
            "value": ""
          },
          "openAiLocation": {
            "value": "[parameters('openAiLocation')]"
          },
          "openAiResourceName": {
            "value": "[variables('openAiName')]"
          },
          "managedIdentityPrincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-identities', deployment().name)), '2022-09-01').outputs.identityPrincipalId.value]"
          },
          "aadGroupId": {
            "value": "[variables('devBoxUserGroup')]"
          },
          "privateDnsZoneId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name)), '2022-09-01').outputs.openAiPrivateDnsZoneId.value]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name)), '2022-09-01').outputs.privateEndpointSubnetId.value]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "931100558363161815"
            }
          },
          "parameters": {
            "openAiResourceName": {
              "type": "string"
            },
            "openAiModelName": {
              "type": "string"
            },
            "openAiModelGpt4Name": {
              "type": "string"
            },
            "openAiEmbeddingModelName": {
              "type": "string"
            },
            "managedIdentityPrincipalId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "openAiLocation": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "aadGroupId": {
              "type": "string"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "privateDnsZoneId": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', format('{0}-private-endpoint', parameters('openAiResourceName')), format('{0}-private-endpoint-dns', parameters('openAiResourceName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[format('{0}-private-endpoint-cfg', parameters('openAiResourceName'))]",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-private-endpoint', parameters('openAiResourceName')))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('openAiResourceName')]",
              "location": "[parameters('openAiLocation')]",
              "kind": "OpenAI",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "sku": {
                "name": "S0"
              },
              "properties": {
                "publicNetworkAccess": "Disabled",
                "networkAcls": {
                  "defaultAction": "Deny",
                  "ipRules": [],
                  "virtualNetworkRules": []
                },
                "customSubDomainName": "[parameters('openAiResourceName')]"
              }
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}-private-endpoint', parameters('openAiResourceName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-private-link-service-connection', parameters('openAiResourceName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))]",
                      "groupIds": [
                        "account"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('openAiResourceName'), parameters('openAiModelName'))]",
              "sku": {
                "name": "Standard",
                "capacity": 20
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "gpt-35-turbo",
                  "version": "0613"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('openAiModelGpt4Name')))]",
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('openAiResourceName'), parameters('openAiModelGpt4Name'))]",
              "sku": {
                "name": "Standard",
                "capacity": 20
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "gpt-4",
                  "version": "0613"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('openAiResourceName'), parameters('openAiModelName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))]"
              ]
            },
            {
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('openAiResourceName'), parameters('openAiEmbeddingModelName'))]",
              "sku": {
                "name": "Standard",
                "capacity": 20
              },
              "properties": {
                "model": {
                  "format": "OpenAI",
                  "name": "text-embedding-ada-002",
                  "version": "2"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('openAiResourceName'), parameters('openAiModelName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('openAiResourceName'), parameters('openAiModelGpt4Name'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('openAiResourceName'))]",
              "name": "[guid(format('{0}-search-{1}', parameters('managedIdentityPrincipalId'), resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '5e0bd9bd-7b93-4f28-af87-19fc36ad61bd')]",
                "principalId": "[parameters('managedIdentityPrincipalId')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('aadGroupId')))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', parameters('openAiResourceName'))]",
              "name": "[guid(format('{0}-modelreader-{1}', parameters('aadGroupId'), resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))))]",
              "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', '5e0bd9bd-7b93-4f28-af87-19fc36ad61bd')]",
                "principalId": "[parameters('aadGroupId')]",
                "principalType": "Group"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))]"
              ]
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName'))]"
            },
            "openAiName": {
              "type": "string",
              "value": "[parameters('openAiResourceName')]"
            },
            "openAiEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiResourceName')), '2023-05-01').endpoint]"
            },
            "modelName": {
              "type": "string",
              "value": "[parameters('openAiModelName')]"
            },
            "embeddingModelName": {
              "type": "string",
              "value": "[parameters('openAiEmbeddingModelName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-identities', deployment().name))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-apps', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appiName": {
            "value": "[format('appi-{0}', parameters('environmentName'))]"
          },
          "aspName": {
            "value": "[format('{0}-{1}', variables('abbrs').webSitesAppService, parameters('environmentName'))]"
          },
          "logAnalyticsName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-core', deployment().name)), '2022-09-01').outputs.logAnalyticsName.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "4757216754414956755"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "logAnalyticsName": {
              "type": "string"
            },
            "aspName": {
              "type": "string"
            },
            "appiName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('appiName')]",
              "kind": "web",
              "location": "[parameters('location')]",
              "properties": {
                "Application_Type": "web",
                "Flow_Type": "BlueField",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsName'))]",
                "RetentionInDays": 30
              }
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-09-01",
              "name": "[parameters('aspName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "P1V3",
                "capacity": 1
              },
              "properties": {
                "zoneRedundant": false
              }
            }
          ],
          "outputs": {
            "applicationInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appiName')), '2020-02-02').ConnectionString]"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appiName')), '2020-02-02').InstrumentationKey]"
            },
            "aspId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', parameters('aspName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-core', deployment().name))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-cxapi', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightsConnectionString": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-apps', deployment().name)), '2022-09-01').outputs.applicationInsightsConnectionString.value]"
          },
          "aspId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-apps', deployment().name)), '2022-09-01').outputs.aspId.value]"
          },
          "logAnalyticsId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-core', deployment().name)), '2022-09-01').outputs.logAnalyticsId.value]"
          },
          "privateDnsZoneId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name)), '2022-09-01').outputs.appServicePrivateDnsZoneId.value]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name)), '2022-09-01').outputs.privateEndpointSubnetId.value]"
          },
          "sampleAppName": {
            "value": "[format('customerapi-{0}', variables('resourceToken'))]"
          },
          "vnetIntegrationSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name)), '2022-09-01').outputs.vnetIntegrationSubnetId.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "azdServiceName": {
            "value": "customer-api"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "678686820731152865"
            }
          },
          "parameters": {
            "aspId": {
              "type": "string"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "vnetIntegrationSubnetId": {
              "type": "string"
            },
            "privateDnsZoneId": {
              "type": "string"
            },
            "sampleAppName": {
              "type": "string"
            },
            "appInsightsConnectionString": {
              "type": "string"
            },
            "logAnalyticsId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "azdServiceName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', format('{0}-private-endpoint', parameters('sampleAppName')), format('{0}-private-endpoint-dns', parameters('sampleAppName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[format('{0}-private-endpoint-cfg', parameters('sampleAppName'))]",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-private-endpoint', parameters('sampleAppName')))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-09-01",
              "name": "[parameters('sampleAppName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "azd-service-name": "[parameters('azdServiceName')]"
              },
              "properties": {
                "httpsOnly": true,
                "serverFarmId": "[parameters('aspId')]",
                "vnetRouteAllEnabled": true,
                "virtualNetworkSubnetId": "[parameters('vnetIntegrationSubnetId')]",
                "publicNetworkAccess": "Enabled",
                "clientAffinityEnabled": false,
                "siteConfig": {
                  "minTlsVersion": "1.2",
                  "alwaysOn": true,
                  "vnetRouteAllEnabled": true,
                  "ipSecurityRestrictionsDefaultAction": "Deny",
                  "scmIpSecurityRestrictionsDefaultAction": "Allow",
                  "ipSecurityRestrictions": [],
                  "scmIpSecurityRestrictions": [],
                  "appSettings": [
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "[parameters('appInsightsConnectionString')]"
                    },
                    {
                      "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                      "value": "~2"
                    },
                    {
                      "name": "XDT_MicrosoftApplicationInsights_Mode",
                      "value": "default"
                    },
                    {
                      "name": "XDT_MicrosoftApplicationInsights_NodeJS",
                      "value": "1"
                    },
                    {
                      "name": "WEBSITE_NODE_DEFAULT_VERSION",
                      "value": "~18"
                    },
                    {
                      "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                      "value": "true"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', parameters('sampleAppName'))]",
              "name": "diagnostics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsId')]",
                "logs": [
                  {
                    "category": "AppServiceHTTPLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceConsoleLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceAppLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceAuditLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServicePlatformLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sampleAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}-private-endpoint', parameters('sampleAppName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-private-link-service-connection', parameters('sampleAppName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', parameters('sampleAppName'))]",
                      "groupIds": [
                        "sites"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sampleAppName'))]"
              ]
            }
          ],
          "outputs": {
            "appUrl": {
              "type": "string",
              "value": "[format('https://{0}/', reference(resourceId('Microsoft.Web/sites', parameters('sampleAppName')), '2022-09-01').defaultHostName)]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-apps', deployment().name))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-core', deployment().name))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-accountsapi', deployment().name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightsConnectionString": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-apps', deployment().name)), '2022-09-01').outputs.applicationInsightsConnectionString.value]"
          },
          "aspId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-apps', deployment().name)), '2022-09-01').outputs.aspId.value]"
          },
          "logAnalyticsId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-core', deployment().name)), '2022-09-01').outputs.logAnalyticsId.value]"
          },
          "privateDnsZoneId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name)), '2022-09-01').outputs.appServicePrivateDnsZoneId.value]"
          },
          "privateEndpointSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name)), '2022-09-01').outputs.privateEndpointSubnetId.value]"
          },
          "sampleAppName": {
            "value": "[format('accountsapi-{0}', variables('resourceToken'))]"
          },
          "vnetIntegrationSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name)), '2022-09-01').outputs.vnetIntegrationSubnetId.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "azdServiceName": {
            "value": "accounts-api"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.22.6.54827",
              "templateHash": "678686820731152865"
            }
          },
          "parameters": {
            "aspId": {
              "type": "string"
            },
            "privateEndpointSubnetId": {
              "type": "string"
            },
            "vnetIntegrationSubnetId": {
              "type": "string"
            },
            "privateDnsZoneId": {
              "type": "string"
            },
            "sampleAppName": {
              "type": "string"
            },
            "appInsightsConnectionString": {
              "type": "string"
            },
            "logAnalyticsId": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "azdServiceName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', format('{0}-private-endpoint', parameters('sampleAppName')), format('{0}-private-endpoint-dns', parameters('sampleAppName')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[format('{0}-private-endpoint-cfg', parameters('sampleAppName'))]",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDnsZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-private-endpoint', parameters('sampleAppName')))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-09-01",
              "name": "[parameters('sampleAppName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "azd-service-name": "[parameters('azdServiceName')]"
              },
              "properties": {
                "httpsOnly": true,
                "serverFarmId": "[parameters('aspId')]",
                "vnetRouteAllEnabled": true,
                "virtualNetworkSubnetId": "[parameters('vnetIntegrationSubnetId')]",
                "publicNetworkAccess": "Enabled",
                "clientAffinityEnabled": false,
                "siteConfig": {
                  "minTlsVersion": "1.2",
                  "alwaysOn": true,
                  "vnetRouteAllEnabled": true,
                  "ipSecurityRestrictionsDefaultAction": "Deny",
                  "scmIpSecurityRestrictionsDefaultAction": "Allow",
                  "ipSecurityRestrictions": [],
                  "scmIpSecurityRestrictions": [],
                  "appSettings": [
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "[parameters('appInsightsConnectionString')]"
                    },
                    {
                      "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                      "value": "~2"
                    },
                    {
                      "name": "XDT_MicrosoftApplicationInsights_Mode",
                      "value": "default"
                    },
                    {
                      "name": "XDT_MicrosoftApplicationInsights_NodeJS",
                      "value": "1"
                    },
                    {
                      "name": "WEBSITE_NODE_DEFAULT_VERSION",
                      "value": "~18"
                    },
                    {
                      "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                      "value": "true"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', parameters('sampleAppName'))]",
              "name": "diagnostics",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsId')]",
                "logs": [
                  {
                    "category": "AppServiceHTTPLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceConsoleLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceAppLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServiceAuditLogs",
                    "enabled": true
                  },
                  {
                    "category": "AppServicePlatformLogs",
                    "enabled": true
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sampleAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}-private-endpoint', parameters('sampleAppName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('privateEndpointSubnetId')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-private-link-service-connection', parameters('sampleAppName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', parameters('sampleAppName'))]",
                      "groupIds": [
                        "sites"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sampleAppName'))]"
              ]
            }
          ],
          "outputs": {
            "appUrl": {
              "type": "string",
              "value": "[format('https://{0}/', reference(resourceId('Microsoft.Web/sites', parameters('sampleAppName')), '2022-09-01').defaultHostName)]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-apps', deployment().name))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-core', deployment().name))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-vnet', deployment().name))]"
      ]
    }
  ],
  "outputs": {
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    }
  }
}